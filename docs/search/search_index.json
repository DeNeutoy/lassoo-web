{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Lassoo is a data annotation and visualisation tool, designed for quickly exploring, searching and labeling datasets. Lassoo uses UMAP to view high dimensional data in 3 or 2 dimensions, and allows you to select and label data visually. Lassoo uses machine learning to recommend data samples which are similar to the current selection/search. Installation # Lassoo requires Python 3.6.1 or later. The preferred way to install Lassoo is via pip . You can install it with: pip install lassoo Setting up a virtual environment [Conda](https://conda.io/) can be used set up a virtual environment with the version of Python required for Lassoo. If you already have a Python 3 environment you want to use, you can skip to the 'installing via pip' section. 1. [Download and install Conda](https://conda.io/projects/conda/en/latest/user-guide/install/index.html). 2. Create a Conda environment with Python 3.7 (3.6 or 3.8 would work as well): ``` conda create -n lassoo python=3.7 ``` 3. Activate the Conda environment. You will need to activate the Conda environment in each terminal in which you want to use Lassoo: ``` conda activate lassoo ``` Quickstart # import pandas import lassoo import umap # Load some data. data = pandas . load_csv ( \"my_data.csv\" ) # Embed your data somehow. embeddings = get_embeddings ( data ) model = umap . UMAP ( min_dist = 0.0 ) . fit ( embeddings ) # Run the Lassoo UI. run ( data , out_path = \"./out.csv\" , model = model , columns = data . columns , label_column = \"label\" ) This will start a Lassoo server running on localhost:8000 . Paste this into your web browser (chrome/firefox/safari etc) to start exploring! Labels that you create will be saved into a label column (or the name of your label column if you passed the --label-column flag) and written to the out_path location when you hit the Save button in the Lassoo UI. To see more of the options and ways to configure Lassoo, see the Tutorial Page .","title":"Lassoo"},{"location":"#installation","text":"Lassoo requires Python 3.6.1 or later. The preferred way to install Lassoo is via pip . You can install it with: pip install lassoo Setting up a virtual environment [Conda](https://conda.io/) can be used set up a virtual environment with the version of Python required for Lassoo. If you already have a Python 3 environment you want to use, you can skip to the 'installing via pip' section. 1. [Download and install Conda](https://conda.io/projects/conda/en/latest/user-guide/install/index.html). 2. Create a Conda environment with Python 3.7 (3.6 or 3.8 would work as well): ``` conda create -n lassoo python=3.7 ``` 3. Activate the Conda environment. You will need to activate the Conda environment in each terminal in which you want to use Lassoo: ``` conda activate lassoo ```","title":"Installation"},{"location":"#quickstart","text":"import pandas import lassoo import umap # Load some data. data = pandas . load_csv ( \"my_data.csv\" ) # Embed your data somehow. embeddings = get_embeddings ( data ) model = umap . UMAP ( min_dist = 0.0 ) . fit ( embeddings ) # Run the Lassoo UI. run ( data , out_path = \"./out.csv\" , model = model , columns = data . columns , label_column = \"label\" ) This will start a Lassoo server running on localhost:8000 . Paste this into your web browser (chrome/firefox/safari etc) to start exploring! Labels that you create will be saved into a label column (or the name of your label column if you passed the --label-column flag) and written to the out_path location when you hit the Save button in the Lassoo UI. To see more of the options and ways to configure Lassoo, see the Tutorial Page .","title":"Quickstart"},{"location":"configuration/","text":"Enabling Full Text Search # Lassoo also allows full text search over your data as a method for selecting data in the interface via the search_func argument. By default, this is exact string match over all columns with a string type. This can be useful if you know certain keywords are relevant for your labels. Combining this with lassoo's recommendation feature can be very powerful. For example, you might search for \"TV\", which will return all examples containing the phrase. However, because the recommendation uses vector similarity to suggest examples, you can find related examples which don't contain the exact phrase \"TV\", but do contain relevant terms like \"netflix\", \"movie\" etc. UMAP Parameters # UMAP is a very effective algorithm for unsupervised dimensionality reduction. However, the clustering you achieve from it can vary in how tightly it clusters sub-regions of the space, and how much it preserves global vs local structure. Luckily, UMAP is very fast, so you can try out some different values of the n_neighbors and min_dist parameters to see which generate the most useful clustering for your data analysis/annotation. Typically, for annotation/exploration, setting min_dist=0.0 works well. This blog post by Google PAIR (People and AI Research) is very useful for quickly understanding the meaning of the two most important UMAP parameters.","title":"Configuration"},{"location":"configuration/#enabling-full-text-search","text":"Lassoo also allows full text search over your data as a method for selecting data in the interface via the search_func argument. By default, this is exact string match over all columns with a string type. This can be useful if you know certain keywords are relevant for your labels. Combining this with lassoo's recommendation feature can be very powerful. For example, you might search for \"TV\", which will return all examples containing the phrase. However, because the recommendation uses vector similarity to suggest examples, you can find related examples which don't contain the exact phrase \"TV\", but do contain relevant terms like \"netflix\", \"movie\" etc.","title":"Enabling Full Text Search"},{"location":"configuration/#umap-parameters","text":"UMAP is a very effective algorithm for unsupervised dimensionality reduction. However, the clustering you achieve from it can vary in how tightly it clusters sub-regions of the space, and how much it preserves global vs local structure. Luckily, UMAP is very fast, so you can try out some different values of the n_neighbors and min_dist parameters to see which generate the most useful clustering for your data analysis/annotation. Typically, for annotation/exploration, setting min_dist=0.0 works well. This blog post by Google PAIR (People and AI Research) is very useful for quickly understanding the meaning of the two most important UMAP parameters.","title":"UMAP Parameters"},{"location":"python/","text":"Run # Start up a Lassoo server using uvicorn, using the data and umap model passed in as arguments to serve requests. def run ( data : pandas . DataFrame , out_path : str , umap : \"umap.UMAP\" , columns : List [ str ], label_column : str = None , search_func : Callable [[ str , pandas . DataFrame , List [ str ]], List [ int ]] = default_search_func , host : str = \"127.0.0.1\" , port : int = 8000 , ) Arguments # data - A pandas DataFrame, containing a column of text data and an optional column of labels. out_path - A filepath to save the data DataFrame with the updated user provided annotations. umap - A UMAP model to use, created from the data DataFrame. columns - A list of column names that you want visualised in the UI. label_column - The string name of the label column, if there are existing labels. search_func - A function taking a string query and the data passed to run , returning a simple list of indices matching the search. The default search function uses lowercased substring match across all dataframe columns which have a string type. host - The host to run the server on. port - The port to run the server on.","title":"Python API"},{"location":"python/#run","text":"Start up a Lassoo server using uvicorn, using the data and umap model passed in as arguments to serve requests. def run ( data : pandas . DataFrame , out_path : str , umap : \"umap.UMAP\" , columns : List [ str ], label_column : str = None , search_func : Callable [[ str , pandas . DataFrame , List [ str ]], List [ int ]] = default_search_func , host : str = \"127.0.0.1\" , port : int = 8000 , )","title":"Run"},{"location":"python/#arguments","text":"data - A pandas DataFrame, containing a column of text data and an optional column of labels. out_path - A filepath to save the data DataFrame with the updated user provided annotations. umap - A UMAP model to use, created from the data DataFrame. columns - A list of column names that you want visualised in the UI. label_column - The string name of the label column, if there are existing labels. search_func - A function taking a string query and the data passed to run , returning a simple list of indices matching the search. The default search function uses lowercased substring match across all dataframe columns which have a string type. host - The host to run the server on. port - The port to run the server on.","title":"Arguments"},{"location":"tutorial/","text":"Installation # First things first - let's install lassoo. Lassoo requires Python 3.6.1 or later. Install Lassoo using the pip wheel that you downloaded. When to use Lassoo # Lassoo is useful when you want to explore your dataset, and particularly when you have a effective way of embedding examples (for examlple, with a model you've built). Lassoo can render a UMAP visualisation in 2D/3D. On its own, this is quite similar to other visualisations of UMAP (such as UMAP's own .plot ). In addition to this, Lassoo allows you to select and label data, as well as using the UMAP model internals to recommend other datapoints to you based on your selections. Lassoo provides some handy functions for embedding text specifically, but all you need to use Lassoo is a UMAP model and metadata about the datapoints . For example, you could use Lassoo to visualise and label image embeddings from a computer vision model, or molecule embeddings from a graph neural network. The interface # Lassoo has two main parts - the data graph on the right hand side, which shows the embedded points, and a list of the selected data points on the left hand side. To navigate the data graph, you can click and drag. In 3D mode, CTRL + drag will translate the perspective of the camera, which is sometimes useful when you are zoomed in to a particular area. For both 2D and 3D, you can select data points using SHIFT + click . Selected Datapoints # Data points can be selected in two ways: Using the graph - shift + click allows you to select data points visually in the graph. Searching - You can also use the search box to select datapoints containing relevant keywords. The selected datapoints. After selecting datapoints, you can remove individual points from the selection by clicking the x for that individual data point in the list. Once you're happy with the selection, you can label the selection with one of the existing labels by clicking on it. This will assign that label to all datapoints in the current selection. The Recommendation tab # When datapoints in the graph are selected (either via search or by visual selection), Lassoo finds other similar points to recommend based on the current selection. Internally, UMAP builds an approximate nearest neighbours graph over the embedding space. When a group of points is selected, this ANN index is queried, returning points which are similar to the selected points, with various filtering options. Recommendation Options # Include Labelled - whether or not to include already labelled points in the recommendations. For labelling tasks, sometimes it's desirable to turn this off. Similarity - this is the similarity threshold at which points will be recommended. Increasing this slider means only points which are more similar will be recommended. % Overlap - Often, it's helpful to be able to find points which are similar to a lot of the points that you have already selected. This slider filters the recommended points by the percentage of points in the current selection that a recommended point is near to in the embedding space. So, if the value was 15%, a point would not be selected unless it was the nearest neighbour of at least 15% of the points in the current selection. The recommendation tab options in Lassoo. Adding to the selection # Each data point in the recommended tab has a +/- next to it. Clicking the + will add that individual data point to the selection, and - will remove it from the recommendation tab. You can also hit the \"Add all\" button to add all the current datapoints in the recommended pane to the selection. Options # Lassoo has several configuration options for viewing the data graph. You can hide datapoints which are labelled with a particular label, switch from a 3D visualisation to a 2D one, and save your work so far. The options dashboard in Lassoo. Hide certain labels, view in 2D/3D and save your work.","title":"Tutorial"},{"location":"tutorial/#installation","text":"First things first - let's install lassoo. Lassoo requires Python 3.6.1 or later. Install Lassoo using the pip wheel that you downloaded.","title":"Installation"},{"location":"tutorial/#when-to-use-lassoo","text":"Lassoo is useful when you want to explore your dataset, and particularly when you have a effective way of embedding examples (for examlple, with a model you've built). Lassoo can render a UMAP visualisation in 2D/3D. On its own, this is quite similar to other visualisations of UMAP (such as UMAP's own .plot ). In addition to this, Lassoo allows you to select and label data, as well as using the UMAP model internals to recommend other datapoints to you based on your selections. Lassoo provides some handy functions for embedding text specifically, but all you need to use Lassoo is a UMAP model and metadata about the datapoints . For example, you could use Lassoo to visualise and label image embeddings from a computer vision model, or molecule embeddings from a graph neural network.","title":"When to use Lassoo"},{"location":"tutorial/#the-interface","text":"Lassoo has two main parts - the data graph on the right hand side, which shows the embedded points, and a list of the selected data points on the left hand side. To navigate the data graph, you can click and drag. In 3D mode, CTRL + drag will translate the perspective of the camera, which is sometimes useful when you are zoomed in to a particular area. For both 2D and 3D, you can select data points using SHIFT + click .","title":"The interface"},{"location":"tutorial/#selected-datapoints","text":"Data points can be selected in two ways: Using the graph - shift + click allows you to select data points visually in the graph. Searching - You can also use the search box to select datapoints containing relevant keywords. The selected datapoints. After selecting datapoints, you can remove individual points from the selection by clicking the x for that individual data point in the list. Once you're happy with the selection, you can label the selection with one of the existing labels by clicking on it. This will assign that label to all datapoints in the current selection.","title":"Selected Datapoints"},{"location":"tutorial/#the-recommendation-tab","text":"When datapoints in the graph are selected (either via search or by visual selection), Lassoo finds other similar points to recommend based on the current selection. Internally, UMAP builds an approximate nearest neighbours graph over the embedding space. When a group of points is selected, this ANN index is queried, returning points which are similar to the selected points, with various filtering options.","title":"The Recommendation tab"},{"location":"tutorial/#recommendation-options","text":"Include Labelled - whether or not to include already labelled points in the recommendations. For labelling tasks, sometimes it's desirable to turn this off. Similarity - this is the similarity threshold at which points will be recommended. Increasing this slider means only points which are more similar will be recommended. % Overlap - Often, it's helpful to be able to find points which are similar to a lot of the points that you have already selected. This slider filters the recommended points by the percentage of points in the current selection that a recommended point is near to in the embedding space. So, if the value was 15%, a point would not be selected unless it was the nearest neighbour of at least 15% of the points in the current selection. The recommendation tab options in Lassoo.","title":"Recommendation Options"},{"location":"tutorial/#adding-to-the-selection","text":"Each data point in the recommended tab has a +/- next to it. Clicking the + will add that individual data point to the selection, and - will remove it from the recommendation tab. You can also hit the \"Add all\" button to add all the current datapoints in the recommended pane to the selection.","title":"Adding to the selection"},{"location":"tutorial/#options","text":"Lassoo has several configuration options for viewing the data graph. You can hide datapoints which are labelled with a particular label, switch from a 3D visualisation to a 2D one, and save your work so far. The options dashboard in Lassoo. Hide certain labels, view in 2D/3D and save your work.","title":"Options"}]}